{"version":3,"file":"excursions.a2e66c3a7d49e98313ff.js","mappings":"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","sources":["webpack://pero-travel-webpack/./src/js/excursions.js"],"sourcesContent":["'use strict';\r\n\r\nimport { initializeDatepickers } from \"./initializeDatepickers.js\";\r\nimport { handleDropdowns } from \"./handleDropdowns.js\";\r\nimport { setDefaultFilters } from \"./setDefaultFilters.js\";\r\nimport '../css/style.css';\r\n\r\n\r\nfunction beforeShow(input, inst) {\r\n    let offset = $('.filter__form__date').offset();\r\n    let height = parseInt($('.filter__form__date').css(\"height\"));\r\n    window.setTimeout(function() {\r\n        $(inst.dpDiv).css({ top: (offset.top + height) + 'px', left: offset.left + 'px' })}, 1);\r\n};\r\n\r\nconst items = [ {id: \"datepicker\", options: {range: \"period\", beforeShow: beforeShow}, hasWrap: true}, \r\n                {id: \"datepickerInline\", options: {range: \"period\"}},\r\n              ];\r\n\r\n\r\nfunction setMultipleRanges() {\r\n    let multipleRanges = document.querySelectorAll('.multipleRange');\r\n    [].forEach.call(multipleRanges, (range) => {\r\n    \tlet sliderContainer = range.querySelectorAll('.multipleRangeContainer')[0];\r\n    \tlet inputsContainer = range.querySelectorAll('.multipleRangeInputsContainer')[0];\r\n        let sliderMin = [].find.call(sliderContainer.children,\r\n            (el) => el.classList.contains('multipleRange--min'));\r\n        let sliderMax = [].find.call(sliderContainer.children,\r\n            (el) => el.classList.contains('multipleRange--max'));\r\n\r\n        let inputMin = [].find.call(inputsContainer.children,\r\n            (el) => el.classList.contains('multipleRange__input--min'));\r\n        let inputMax = [].find.call(inputsContainer.children,\r\n            (el) => el.classList.contains('multipleRange__input--max'));\r\n\r\n        const progressBar = sliderContainer.querySelectorAll('.multipleRangeSelect')[0];\r\n\r\n        if (inputMin && inputMax) {\r\n            inputMin.value = parseInt(sliderMin.min);\r\n            inputMax.value = parseInt(sliderMin.max);\r\n\r\n            inputMin.addEventListener('change', (e) => {\r\n                let value;\r\n                switch (true) {\r\n                    case (+inputMin.value < +sliderMin.min):\r\n                        inputMin.value = parseInt(sliderMin.min);\r\n                        value = +sliderMin.min;\r\n                        break;\r\n                    case (+inputMin.value > +sliderMax.value):\r\n                        inputMin.value = parseInt(sliderMax.value);\r\n                        value = +sliderMax.value;\r\n                        break;\r\n                    default:\r\n                        value = +inputMin.value;\r\n                };\r\n                sliderMin.value = value;\r\n                setProgressBarPosition();\r\n            });\r\n\r\n            inputMax.addEventListener('change', (e) => {\r\n                let value;\r\n                switch (true) {\r\n                    case (+inputMax.value > +sliderMax.max):\r\n                        inputMax.value = parseInt(sliderMax.max);\r\n                        value = +sliderMax.max;\r\n                        break;\r\n                    case (+inputMax.value < +sliderMin.value):\r\n                        inputMax.value = parseInt(sliderMin.value);\r\n                        value = +sliderMin.value;\r\n                        break;\r\n                    default:\r\n                        value = +inputMax.value;\r\n                };\r\n                sliderMax.value = value;\r\n                setProgressBarPosition();\r\n            });\r\n        };\r\n\r\n        function setProgressBarPosition() {\r\n            let left = (+sliderMin.value / +sliderMin.max) * 100;\r\n            let width = (+sliderMax.value / +sliderMax.max) * 100 - left;\r\n            progressBar.style.left = `calc(${left}% - 7.5px)`;\r\n            progressBar.style.width = width + '%';\r\n        };\r\n\r\n        sliderMin.addEventListener('input', (e) => {\r\n            if (+sliderMin.value > +sliderMax.value) {\r\n                sliderMin.value = +sliderMax.value;\r\n            };\r\n            setProgressBarPosition();\r\n            if (inputMin) inputMin.value = parseInt(sliderMin.value);\r\n        });\r\n\r\n        sliderMax.addEventListener('input', (e) => {\r\n            if (+sliderMax.value < +sliderMin.value) {\r\n                sliderMax.value = +sliderMin.value;\r\n            };\r\n            setProgressBarPosition();\r\n            if (inputMax) inputMax.value = parseInt(sliderMax.value);\r\n        });\r\n    });\r\n};\r\n\r\n\r\nfunction linkSameFilters() {\r\n    const initialFilters = Array.from(document.querySelectorAll('[data-initialfilter]'));\r\n    const doublingFilters = initialFilters.reduce((obj, filter) => {\r\n        obj[`${filter.dataset.id}`] = Array.from(document.querySelectorAll(`.dropdownItemsList[data-id='${filter.dataset.id}']`));\r\n        return obj;\r\n    }, {});\r\n\r\n\tfor (let key in doublingFilters) {\r\n    \tlet arr = doublingFilters[key];\r\n    \tarr.forEach((elem) => {\r\n    \t\tlet options = Array.from(elem.querySelectorAll('.hiddenRadio'));\r\n\t    \toptions.forEach((option) => {\r\n\t    \t\toption.addEventListener('click', (e) => {\r\n\t\t            let value = e.target.value;\r\n\t\t            let filterToChange = arr.filter((el) => el != elem)[0];\r\n\t\t            let optionToChange = filterToChange.querySelectorAll(`.hiddenRadio[value=\"${value}\"]`)[0];\r\n\t\t            optionToChange.checked = true;\r\n\t\t            optionToChange.dispatchEvent(new Event('change'));\r\n\t\t        });\r\n\t    \t});\r\n    \t});\r\n    };\r\n}\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    initializeDatepickers(items);\r\n    setDefaultFilters();\r\n    linkSameFilters();\r\n    setMultipleRanges();\r\n    handleDropdowns();\r\n\r\n    const cleanBtn = document.querySelector(\".filter__main__clean\");\r\n    cleanBtn.addEventListener('click', setDefaultFilters);\r\n\r\n    const favoritBtns = document.querySelectorAll('.favorits__btn');\r\n    for (let btn of favoritBtns) {\r\n        btn.addEventListener('click', (e) => {\r\n            e.currentTarget.classList.toggle('favorits__btn--active');\r\n        });\r\n    };\r\n    \r\n});"],"names":["items","id","options","range","beforeShow","input","inst","offset","$","height","parseInt","css","window","setTimeout","dpDiv","top","left","hasWrap","document","addEventListener","multipleRanges","initializeDatepickers","setDefaultFilters","doublingFilters","Array","from","querySelectorAll","reduce","obj","filter","dataset","key","arr","forEach","elem","option","e","value","target","optionToChange","el","checked","dispatchEvent","Event","linkSameFilters","call","sliderContainer","inputsContainer","sliderMin","find","children","classList","contains","sliderMax","inputMin","inputMax","progressBar","setProgressBarPosition","max","width","style","min","handleDropdowns","querySelector","currentTarget","toggle"],"sourceRoot":""}