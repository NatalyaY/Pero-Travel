{"version":3,"file":"tripPage.2a8aac008e4bf748581e.js","mappings":"krCAUA,IAAMA,EAAQ,CAAE,CAACC,GAAI,iBAAkBC,QAAS,CAACC,iBAAiB,GAAOC,SAAS,GAClE,CAACH,GAAI,qBAAsBC,QAAS,CAACC,iBAAiB,KAuBtEE,SAASC,iBAAiB,oBAAoB,WApB9C,IACQC,EAcAC,GAMPC,EAAAA,EAAAA,GAAsBT,GApBfO,EAAW,IAAIG,kBAAiB,SAAAC,GACnC,IACIC,EADOD,EAAU,GAAGE,OACUC,iBAAiB,qCACnDF,EAAyBG,MAAMC,KAAKJ,IACbK,SAAQ,SAACC,GAC/B,IAAIC,EAAOd,SAASe,cAAc,QAClCD,EAAKE,UAAY,cACbH,EAAII,WAAWC,UAAUC,SAAS,8BACrCL,EAAKI,UAAUE,IAAI,mCAAoC,8CACjDN,EAAKI,UAAUE,IAAI,mCAAoC,4CAC3DP,EAAIQ,YAAYP,GAChBD,EAAIK,UAAUE,IAAI,WACrB,GACD,IACGjB,EAAaH,SAASsB,cAAc,yBACxCpB,EAASqB,QAAQpB,EAAY,CAACqB,WAAW,EAAMC,SAAS,KAO3DC,EAAAA,EAAAA,MACAC,EAAAA,EAAAA,KAEA,IAAIC,EAAAA,GAAoB,qCACrB,IAAIC,EAAAA,GAAQ,cACZ,IAAID,EAAAA,GAAoB,YAE3B,IAVmD,MAU/B5B,SAASS,iBAAiB,mBAVK,IAWhD,IAAK,EAAL,qBAA6B,SACrBR,iBAAiB,SAAS,SAAC6B,GAC3BA,EAAEC,cAAcb,UAAUc,OAAO,wBACpC,GACJ,CAf+C,+BAgBnD,G","sources":["webpack://pero-travel-webpack/./src/js/tripPage.js"],"sourcesContent":["'use strict';\r\n\r\n\r\nimport {Gallery, GalleryWithControls} from \"./gallery.js\";\r\nimport { initializeDatepickers } from \"./initializeDatepickers.js\";\r\nimport { handleDropdowns } from \"./handleDropdowns.js\";\r\nimport { setDefaultFilters } from \"./setDefaultFilters.js\";\r\nimport '../css/style.css';\r\n\r\n\r\nconst items = [ {id: \"datepickerForm\", options: {showOtherMonths: true}, hasWrap: true}, \r\n                {id: \"datepickerTripPage\", options: {showOtherMonths: true}},\r\n              ];\r\n\r\nfunction addTimeToCalendar() {\r\n    let observer = new MutationObserver(mutations => {\r\n    \tlet elem = mutations[0].target;\r\n    \tlet selectableCalendarDays = elem.querySelectorAll('.ui-state-default:not(.withTime)');\r\n    \tselectableCalendarDays = Array.from(selectableCalendarDays);\r\n\t    selectableCalendarDays.forEach((day) => {\r\n\t    \tlet time = document.createElement('span');\r\n\t    \ttime.innerText = \"06:00-20:00\";\r\n\t    \tif (day.parentNode.classList.contains('ui-datepicker-unselectable')) {\r\n\t    \t\ttime.classList.add('tripPage__calendar__widget__time', 'tripPage__calendar__widget__time--inactive');\r\n\t    \t} else time.classList.add('tripPage__calendar__widget__time', 'tripPage__calendar__widget__time--active');\r\n\t        day.appendChild(time);\r\n\t        day.classList.add('withTime');\r\n\t    });\r\n    });\r\n    let datePicker = document.querySelector('.ui-datepicker-inline');\r\n    observer.observe(datePicker, {childList: true, subtree: true});\r\n};\r\n\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n\tinitializeDatepickers(items);\r\n\taddTimeToCalendar();\r\n\thandleDropdowns();\r\n\tsetDefaultFilters();\r\n\r\n\tnew GalleryWithControls('.tripPage__path__gallery__content');\r\n    new Gallery('.tile-grid');\r\n    new GalleryWithControls('.reviews');\r\n\r\n\tconst favoritBtns = document.querySelectorAll('.favorits__btn');\r\n    for (let btn of favoritBtns) {\r\n        btn.addEventListener('click', (e) => {\r\n            e.currentTarget.classList.toggle('favorits__btn--active');\r\n        });\r\n    };\r\n});"],"names":["items","id","options","showOtherMonths","hasWrap","document","addEventListener","observer","datePicker","initializeDatepickers","MutationObserver","mutations","selectableCalendarDays","target","querySelectorAll","Array","from","forEach","day","time","createElement","innerText","parentNode","classList","contains","add","appendChild","querySelector","observe","childList","subtree","handleDropdowns","setDefaultFilters","GalleryWithControls","Gallery","e","currentTarget","toggle"],"sourceRoot":""}