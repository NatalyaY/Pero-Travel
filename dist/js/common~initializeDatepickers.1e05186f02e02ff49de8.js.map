{"version":3,"file":"common~initializeDatepickers.1e05186f02e02ff49de8.js","mappings":"0YAOO,SAASA,EAAsBC,GA8CrC,SAASC,EAA2BC,EAAMC,GACzC,IAOWC,EAPLC,EAAmC,WAAhB,EAAOF,KAAsBG,MAAMC,QAAQJ,IAAkB,OAATA,EACpEK,EAAKN,EAAKM,GACVC,EAAaC,SAASC,cAAT,oBAAoCH,EAApC,mBACbI,EAAWF,SAASC,cAAT,oBAAoCH,EAApC,iBACXK,EAAiBH,SAASC,cAAT,oBAAoCH,EAApC,uBAEnBK,IAGCT,EADGC,EACKF,EAAKW,eAAiBX,EAAKY,YAAeZ,EAAKW,cAC/CX,EAAKW,cAAgB,MAAQX,EAAKY,YAC7BZ,EACda,EAAEH,GAAgBT,KAAKA,IAGvBK,GAAYO,EAAEP,GAAYQ,IAAId,EAAKW,eAAeX,GAClDS,GAAUI,EAAEJ,GAAUK,IAAId,EAAKY,aAAaZ,EACnD,CA9DDa,EAAEE,WAAWC,SAAb,GAA8B,CAC1BC,YAAa,CAAC,KAAM,KAAM,KAAM,KAAM,KAAM,KAAM,MAClDC,WAAY,CAAC,SAAS,UAAU,OAAO,SAAS,MAAM,OAAO,OAAO,SAAS,WAAW,UAAU,SAAS,WAC3GC,WAAY,WACZC,SAAU,EACVC,oBAAoB,EACpBC,QAAS,EACTC,SAAU,SAASC,EAAUzB,EAAM0B,GAE/B3B,EAA2BC,EADjB0B,GAAkCD,GAE1BrB,MAAMuB,KAAKnB,SAASoB,iBAAiB,mBAC3CC,SAAQ,SAACC,GACjB,GAAIA,EAAKxB,IAAMN,EAAKM,GAAI,CACvB,IAAIL,EAAOyB,EAAiB,CAACA,EAAed,cAAec,EAAeb,aAAeY,EACtFX,EAAE,IAAD,OAAKgB,EAAKxB,KAAMU,WAAW,UAAWf,EAC1C,CACJ,GACJ,GAGLa,EAAEE,WAAWe,YAAYjB,EAAEE,WAAWC,SAAb,IAEzBH,EAAEE,WAAWgB,cAAgBlB,EAAEE,WAAWiB,SAC1CnB,EAAEE,WAAWiB,SAAW,SAASC,EAAUC,EAAGC,GAC7CtB,EAAEE,WAAWgB,cAAcE,EAAUC,EAAGC,GACvB,WAAb,EAAOD,IAAmB/B,MAAMC,QAAQ8B,IAAY,OAANA,IACjDA,EAAI,GAAH,OAAMA,EAAEE,UAAR,aAAsBF,EAAEG,WAAW,EAAnC,YAAwCH,EAAEI,gBAE5C,IAAMb,EAAiBQ,EAASM,MAAMC,KAAK,4BAE3C1C,EAA2BmC,EADdR,GAAkCS,EAE/C,EAGArC,EAAM+B,SAAQ,SAACa,GACd5B,EAAE,IAAD,OAAK4B,EAAKpC,KAAMU,WAAW0B,EAAKC,SAC7BD,EAAKE,SACR9B,EAAE,IAAD,OAAK4B,EAAKpC,GAAV,WAAsBuC,OAAM,kBAAM/B,EAAE,IAAD,OAAK4B,EAAKpC,KAAMU,WAAW,OAAlC,GAE9B,GAwBF,C","sources":["webpack://pero-travel-webpack/./src/js/initializeDatepickers.js"],"sourcesContent":["'use strict'\r\n\r\nimport '/node_modules/jquery-ui/ui/widgets/datepicker.js';\r\nimport './jquery.datepicker.extension.range.min.js';\r\nimport '/node_modules/jquery-ui/themes/base/theme.css';\r\nimport '/node_modules/jquery-ui/themes/base/datepicker.css';\r\n\r\nexport function initializeDatepickers(items) {\r\n\r\n\t$.datepicker.regional['ru'] = {\r\n\t    dayNamesMin: ['Вс', 'Пн', 'Вт', 'Ср', 'Чт', 'Пт', 'Сб'],\r\n\t    monthNames: ['Январь','Февраль','Март','Апрель','Май','Июнь','Июль','Август','Сентябрь','Октябрь','Ноябрь','Декабрь'],\r\n\t    dateFormat: 'dd.mm.yy',\r\n\t    firstDay: 1,\r\n\t    showMonthAfterYear: false,\r\n\t    minDate: 0,\r\n\t    onSelect: function(dateText, inst, extensionRange) {\r\n\t    \tconst date = extensionRange ? extensionRange : dateText;\r\n\t        upDateInputsFromDatepicker(inst, date);\r\n\t        let datepickers = Array.from(document.querySelectorAll('.hasDatepicker'));\r\n\t        datepickers.forEach((elem) => {\r\n\t            if (elem.id != inst.id) {\r\n\t            \tlet date = extensionRange ? [extensionRange.startDateText, extensionRange.endDateText] : dateText;\r\n\t                $(`#${elem.id}`).datepicker('setDate', date);\r\n\t            };\r\n\t        });\r\n\t    },\r\n\t};\r\n\r\n\t$.datepicker.setDefaults($.datepicker.regional['ru']);\r\n\r\n\t$.datepicker._setDate_copy = $.datepicker._setDate;\r\n\t$.datepicker._setDate = function(instance, e, i) {\r\n\t\t$.datepicker._setDate_copy(instance, e, i);\r\n\t\tif (typeof e === \"object\" && !Array.isArray(e) && e !== null) {\r\n\t\t\te = `${e.getDate()}.0${e.getMonth()+1}.${e.getFullYear()}`;\r\n\t\t}\r\n\t\tconst extensionRange = instance.dpDiv.data(\"datepickerExtensionRange\");\r\n\t\tconst date = extensionRange ? extensionRange : e;\r\n\t\tupDateInputsFromDatepicker(instance, date);\r\n\t};\r\n\r\n\tfunction initializeItems() {\r\n\t\titems.forEach((item) => {\r\n\t\t\t$(`#${item.id}`).datepicker(item.options);\r\n\t\t\tif (item.hasWrap) {\r\n\t\t\t\t$(`.${item.id}__wrap`).click(() => $(`#${item.id}`).datepicker(\"show\"));\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tinitializeItems();\r\n\r\n\tfunction upDateInputsFromDatepicker(inst, date) {\r\n\t\tconst isExtensionRange = typeof date === \"object\" && !Array.isArray(date) && date !== null;\r\n\t    const id = inst.id;\r\n\t    const inputStart = document.querySelector(`[data-id=\"${id}__inputStart\"]`);\r\n\t    const inputEnd = document.querySelector(`[data-id=\"${id}__inputEnd\"]`);\r\n\t    const fieldToDisplay = document.querySelector(`[data-id=\"${id}__fieldToDisplay\"]`);\r\n\r\n\t    if (fieldToDisplay) {\r\n\t        let text;\r\n\t        if (isExtensionRange) {\r\n\t        \ttext = (date.startDateText == date.endDateText) ? date.startDateText :\r\n\t        \t        date.startDateText + ' - ' + date.endDateText;\r\n\t        } else text = date;\r\n\t        $(fieldToDisplay).text(text);\r\n\t    };\r\n\r\n\t    if (inputStart) $(inputStart).val(date.startDateText||date);\r\n\t    if (inputEnd) $(inputEnd).val(date.endDateText||date);\r\n\t};\r\n};"],"names":["initializeDatepickers","items","upDateInputsFromDatepicker","inst","date","text","isExtensionRange","Array","isArray","id","inputStart","document","querySelector","inputEnd","fieldToDisplay","startDateText","endDateText","$","val","datepicker","regional","dayNamesMin","monthNames","dateFormat","firstDay","showMonthAfterYear","minDate","onSelect","dateText","extensionRange","from","querySelectorAll","forEach","elem","setDefaults","_setDate_copy","_setDate","instance","e","i","getDate","getMonth","getFullYear","dpDiv","data","item","options","hasWrap","click"],"sourceRoot":""}