{"version":3,"file":"index.b4262b37fb300c763e97.js","mappings":"wHAEA,IAAMA,EAAOC,SAASC,cAAc,SAC9BC,EAAgB,GAaf,SAASC,EAAaC,GAC5B,IAAMC,EAAOD,EAAME,QAAQD,KAAKE,MAAM,IAoBtC,SAASC,EAAYC,GACpB,IAAIC,EAAiBN,EAAMM,eACvBC,EAAeP,EAAMO,aAErBC,EAAkBR,EAAMS,MAAMN,MAAM,IAAIO,MAAM,GAAGC,QAAO,SAACC,GAAD,MAAU,KAAKC,KAAKD,EAApB,IAExDE,EAxBL,SAAmBC,GAIlB,IAHA,IAAIC,EAAYD,EAAWL,QACvBI,EAAc,GAETG,EAAI,EAAGA,EAAIhB,EAAKiB,UACC,GAApBF,EAAUE,QAAeJ,EAAYI,QAAUjB,EAAKkB,QAAQ,MADjCF,IAEjB,KAAXhB,EAAKgB,GAIe,GAApBD,EAAUE,QACbJ,EAAYM,KAAKJ,EAAUK,SAJ3BP,EAAYM,KAAKnB,EAAKgB,IAQxB,OAAOH,EAAYQ,KAAK,GACxB,CAQkBC,CAAUf,GAI5B,GAFAR,EAAMS,MAAQK,EAEC,QAAVT,EAAEmB,MAAkBV,EAAYI,QAAUlB,EAAME,QAAQD,KAAKiB,OAIjE,OAHIpB,EAAc2B,SAASzB,IAAQA,EAAM0B,UAAUC,IAAI,WACvD3B,EAAMS,MAAQ,QACdT,EAAM4B,aAAa,QAAS,IAY7B,GARId,EAAYI,QAAUlB,EAAME,QAAQD,KAAKiB,SAC5ClB,EAAM4B,aAAa,QAASd,GACxBd,EAAM0B,UAAUG,SAAS,aAC5B/B,EAAcsB,KAAKpB,GACnBA,EAAM0B,UAAUI,OAAO,aAIK,GAA1BtB,EAAgBU,OAApB,CAIA,GAAIlB,EAAMO,cAAgBA,EACzB,KAAMP,EAAMO,cAAgBA,GACtB,OAAOM,KAAKb,EAAMS,MAAMF,EAAa,KAUzCP,EAAMO,aAAeA,EACrBP,EAAMM,eAAiBA,GAVnBN,EAAMO,aAAeA,GACxBA,IACAD,MAEAC,IACAD,KAUJN,EAAMO,aAAeA,EACrBP,EAAMM,eAAiBA,CArBtB,CAuBD,CAEDN,EAAM+B,iBAAiB,SAAS,SAAC1B,GAAD,OAAOD,EAAYC,EAAnB,IAChCL,EAAM+B,iBAAiB,SAAS,SAAC1B,GAAD,OAAOD,EAAYC,EAAnB,IAChCL,EAAM+B,iBAAiB,QAAQ,SAAC1B,GAAD,OAAOD,EAAYC,EAAnB,GAC/B,C,aCtFKV,EAAOC,SAASC,cAAc,SAC9BmC,EAAgBrC,EAAKE,cAAc,iBACnCoC,EAAiBtC,EAAKuC,iBAAiB,eAE7CF,EAAcD,iBAAiB,SAAS,SAAC1B,GAAD,ODJjC,SAAkCA,GACxCA,EAAE8B,iBACF,IAAIC,EAAsBzC,EAAKuC,iBAAiB,oCAC5CE,EAAoBlB,OACvBmB,MAAMC,KAAKF,GAAqBG,SAAQ,SAACC,GACxCA,EAAGd,UAAUC,IAAI,UACjB,IACKhC,EAAK8C,QACZ,CCJ8CC,CAAyBrC,EAAhC,IAExCgC,MAAMC,KAAKL,GAAgBM,SAAQ,SAACC,GAAD,OAAQzC,EAAayC,EAArB,IAEnC5C,SAASmC,iBAAiB,oBAAoB,WAC1C,IAAIY,EAAAA,GAAa,kBACjB,IAAIC,EAAAA,GAAoB,iBACxB,IAAIC,EAAAA,GAAQ,cACZ,IAAID,EAAAA,GAAoB,WAC3B,G","sources":["webpack://pero-travel-webpack/./src/js/form.js","webpack://pero-travel-webpack/./src/js/index.js"],"sourcesContent":["'use strict';\r\n\r\nconst form = document.querySelector('.form');\r\nconst invalidFields = [];\r\n\r\n\r\nexport function markEmptyRequuiredInputs(e) {\r\n\te.preventDefault();\r\n\tlet emptyRequiredInputs = form.querySelectorAll('.form__input[required][value=\"\"]');\r\n\tif (emptyRequiredInputs.length) {\r\n\t\tArray.from(emptyRequiredInputs).forEach((el) => {\r\n\t\t\tel.classList.add(\"invalid\");\r\n\t\t});\r\n\t} else form.submit();\r\n};\r\n\r\nexport function useInputMask(input) {\r\n\tconst mask = input.dataset.mask.split('');\r\n\r\n\tfunction applyMask(inputValue) {\r\n\t\tlet inputData = inputValue.slice();\r\n\t\tlet maskedValue = [];\r\n\r\n\t\tfor (let i = 0; i < mask.length; i++) {\r\n\t\t\tif ((inputData.length == 0)&&(maskedValue.length >= mask.indexOf(\"_\"))) break;\r\n\t\t\tif (mask[i] != \"_\") { \r\n\t\t\t\tmaskedValue.push(mask[i]);\r\n\t\t\t\tcontinue;\r\n\t\t\t};\r\n\t\t\tif (inputData.length != 0) {\r\n\t\t\t\tmaskedValue.push(inputData.shift());\r\n\t\t\t\tcontinue;\r\n\t\t\t};\r\n\t\t};\r\n\t\treturn maskedValue.join('');\r\n\t}\r\n\r\n\tfunction inputChange(e) {\r\n\t\tlet selectionStart = input.selectionStart;\r\n\t\tlet selectionEnd = input.selectionEnd;\r\n\r\n\t\tlet cleanInputValue = input.value.split('').slice(3).filter((char) => /\\d/.test(char));\r\n\r\n\t\tlet maskedValue = applyMask(cleanInputValue);\r\n\r\n\t\tinput.value = maskedValue; // чтобы в поле отображалась маска при первом клике и было видно вводимые цифры\r\n\r\n\t\tif ((e.type == 'blur')&&(maskedValue.length != input.dataset.mask.length)) {\r\n\t\t\tif (invalidFields.includes(input)) input.classList.add(\"invalid\");\r\n\t\t\tinput.value = \"\";\r\n\t\t\tinput.setAttribute(\"value\", \"\");\r\n\t\t\treturn;\r\n\t\t};\r\n\r\n\t\tif (maskedValue.length == input.dataset.mask.length) {\r\n\t\t\tinput.setAttribute(\"value\", maskedValue);\r\n\t\t\tif (input.classList.contains('invalid')) {\r\n\t\t\t\tinvalidFields.push(input);\r\n\t\t\t\tinput.classList.remove(\"invalid\");\r\n\t\t\t};\r\n\t\t};\r\n\r\n\t\tif (cleanInputValue.length == 0) {\r\n\t\t\treturn;\r\n\t\t};\r\n\r\n\t\tif (input.selectionEnd != selectionEnd) {\r\n\t\t\twhile(input.selectionEnd != selectionEnd) {\r\n\t\t\t\tif (!/\\d|s/.test(input.value[selectionEnd-1])) {\r\n\t\t\t\t\tif (input.selectionEnd < selectionEnd) {\r\n\t\t\t\t\t\tselectionEnd--;\r\n\t\t\t\t\t\tselectionStart--;\r\n\t\t\t\t\t} else {\r\n\t\t\t\t\t\tselectionEnd++;\r\n\t\t\t\t\t\tselectionStart++;\r\n\t\t\t\t\t};\r\n\t\t\t\t\t\r\n\t\t\t\t} else {\r\n\t\t\t\t\tinput.selectionEnd = selectionEnd;\r\n\t\t\t\t\tinput.selectionStart = selectionStart;\r\n\t\t\t\t}\r\n\t\t\t};\r\n\t\t}\r\n\r\n\t\tinput.selectionEnd = selectionEnd;\r\n\t\tinput.selectionStart = selectionStart;\r\n\r\n\t}\r\n\r\n\tinput.addEventListener('click', (e) => inputChange(e));\r\n\tinput.addEventListener('keyup', (e) => inputChange(e));\r\n\tinput.addEventListener('blur', (e) => inputChange(e));\r\n};\r\n","'use strict';\r\n\r\nimport {markEmptyRequuiredInputs, useInputMask} from \"./form.js\";\r\nimport {Gallery, VideoGallery, GalleryWithControls} from \"./gallery.js\";\r\nimport '../css/style.css';\r\n\r\nconst form = document.querySelector('.form');\r\nconst formSubmitBtn = form.querySelector('.form__submit');\r\nconst inputsWithMask = form.querySelectorAll('[data-mask]');\r\n\r\nformSubmitBtn.addEventListener('click', (e) => markEmptyRequuiredInputs(e));\r\n\r\nArray.from(inputsWithMask).forEach((el) => useInputMask(el));\r\n\r\ndocument.addEventListener('DOMContentLoaded', () => {\r\n    new VideoGallery(\".header__video\"); \r\n    new GalleryWithControls('.popularTrips');\r\n    new Gallery('.tile-grid');\r\n    new GalleryWithControls('.reviews');\r\n});"],"names":["form","document","querySelector","invalidFields","useInputMask","input","mask","dataset","split","inputChange","e","selectionStart","selectionEnd","cleanInputValue","value","slice","filter","char","test","maskedValue","inputValue","inputData","i","length","indexOf","push","shift","join","applyMask","type","includes","classList","add","setAttribute","contains","remove","addEventListener","formSubmitBtn","inputsWithMask","querySelectorAll","preventDefault","emptyRequiredInputs","Array","from","forEach","el","submit","markEmptyRequuiredInputs","VideoGallery","GalleryWithControls","Gallery"],"sourceRoot":""}